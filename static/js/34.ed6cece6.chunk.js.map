{"version":3,"file":"static/js/34.ed6cece6.chunk.js","mappings":"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","sources":["redux/contacts/Selectors.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/Contact.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectLoadingStatus = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterValue = state => state.filter;\n\nexport const selectContactsByName = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilterValue(state);\n  if (!filter) {\n    return [...contacts].sort((firstContact, secondContact) =>\n      firstContact.name.localeCompare(secondContact.name)\n    );\n  }\n\n  return [...contacts]\n    .sort((firstContact, secondContact) =>\n      firstContact.name.localeCompare(secondContact.name)\n    )\n    .filter(contact =>\n      contact.name.toUpperCase().includes(filter.toUpperCase())\n    );\n};","\nimport styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  width: 600px;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  color: white;\n`;\n\nexport const Label = styled.label`\n  width: 60px;\n  margin-right: 10px;\n  color: white;\ntext-shadow: 0 0 20px #7f00ff,\n             0 0 30px #9831ff,\n             0 0 40px #ac59ff;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n  border-radius: 5px;\n  border: solid 1px;\n  \n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const BtnSubmit = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 15px;\n  width: 180px;\n  font-size: 16px;\n  padding: 1.5rem;  \n  margin-top: 25px;\n  background: transparent;\n  text-align: center;\n  border-radius: 5px;\n  cursor: pointer;\n  color: rgb(127, 255, 0);\n  border: rgb(127, 255, 0) 0.125em solid;\n  text-shadow: 0 0 0.125em hsl(0 0% 100% / 0.3), 0 0 0.45em rgb(127, 255, 0);\n  box-shadow: inset 0 0 0.5em 0 rgb(127, 255, 0), 0 0 0.5em 0 rgb(127, 255, 0);\n:hover,\n:focus{\n  background-color: rgb(127, 255, 0);\n  color: black;\n  border-color: transparent;\ntransition-duration: 250ms;\n}\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { addContact } from 'redux/contacts/fetchApi';\nimport { selectContacts } from 'redux/contacts/Selectors';\nimport { FormBox, Label, Input, BtnSubmit} from './ContactForm.styled';\n\n\n\nexport const ContactForm = () => {\n  const initualValues = {\n    name: '',\n    number: '',\n  };\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleOnSubmit = (values, { resetForm }) => {\n    contacts.find(\n      contact => values.name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? Notify.failure(`${values.name} is already in contacts`)\n      : dispatch(addContact(values)) && resetForm();\n  };\n\n  return (\n    <section>\n      <div>\n        <h2>Add contact:</h2>\n        <Formik initialValues={initualValues} onSubmit={handleOnSubmit}>\n          <FormBox>\n            <Label>Name</Label>\n            <Field\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              as={Input}\n              required\n            />\n            <Label>Number</Label>\n            <Field\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              as={Input}\n              required\n            />\n            <BtnSubmit variant=\"contained\" type=\"submit\">\n              Add contact\n            </BtnSubmit>\n          </FormBox>\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\n","import styled from \"@emotion/styled\"\n\n\n\nexport const Label = styled.h3`\n  margin-bottom: 10px;\n  color: white;\ntext-shadow: 0 0 20px #7f00ff,\n             0 0 30px #9831ff,\n             0 0 40px #ac59ff;\n`;\n\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n  border-radius: 5px;\n  border: solid 1px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n`;\n\n\n\n\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from '../../redux/contacts/FilterSlice';\nimport { selectFilterValue } from 'redux/contacts/Selectors';\nimport { Label, Input } from './Filter.styled';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const filterInputHandler = event => {\n    const inputValue = event.target.value;\n    dispatch(setFilterValue(inputValue));\n  };\n\n  return (\n    <section>\n      <div>\n        <Label>\n          Find contact by name:\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={filterInputHandler}\n            title=\"Search field\"\n            required\n          />\n        </Label>\n      </div>\n    </section>\n  );\n};\n\n","import styled from \"@emotion/styled\"\n\nexport const ListBox = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-basis: calc((100% - 60px) / 3);\n`;\n\nexport const ContactListText = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  text-transform: capitalize;\n  color: white;\n  text-shadow:0 0 20px rgba(127,0,255,0),\n             0 0 30px #9831ff,\n             0 0 40px #ac59ff;\n`\n;\n\nexport const BtnDelete = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 180px;\n  font-size: 16px;\n  color: #e04848;\n  padding: 1.5rem;\n  border-radius: 5px;\n  border-color: transparent;\n  margin-top: 25px;\n  background: transparent;\n  text-align: center;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: 0 0 50px 15px #e04848;\n  border: #e04848 0.125em solid;\n  text-shadow: 0 0 0.125em hsl(0 0% 100% / 0.3), 0 0 0.45em #e04848;\n  box-shadow: inset 0 0 0.5em 0 #e04848, 0 0 0.5em 0 #e04848;\n  :hover,\n:focus{\n  background-color: #e04848;\n  color: black;\n  border-color: transparent;\ntransition-duration: 250ms;\n}\n`;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsByName, selectLoadingStatus } from 'redux/contacts/Selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/fetchApi';\nimport { Loader } from 'components/Loader/SpinningLoader';\nimport { ListBox, ListItem, BtnDelete, Text } from './Contact.styled';\n\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsByName);\n  const isLoading = useSelector(selectLoadingStatus);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <div>\n        <h2>Contacts</h2>\n        {contacts.length === 0 ? (\n          <h2>Phonebook is empty</h2>\n        ) : (\n          <ListBox>\n            {isLoading && <Loader />}\n            {contacts.map(({ id, name, number }) => (\n              <ListItem key={id}>\n                <Text>{name}</Text>\n                <Text>{number}</Text>\n                <BtnDelete\n                  variant=\"contained\"\n                  onClick={() => {\n                    dispatch(deleteContact(id));\n                  }}\n                >\n                  Delete contact\n                </BtnDelete>\n              </ListItem>\n            ))}\n          </ListBox>\n        )}\n      </div>\n    </section>\n  );\n};\n\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/fetchApi';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectLoadingStatus","isLoading","selectFilterValue","filter","selectContactsByName","sort","firstContact","secondContact","name","localeCompare","contact","toUpperCase","includes","FormBox","styled","Form","Label","Input","BtnSubmit","ContactForm","useSelector","dispatch","useDispatch","initialValues","number","onSubmit","values","resetForm","find","toLowerCase","Notify","addContact","type","pattern","title","as","required","variant","Filter","value","onChange","event","inputValue","target","setFilterValue","ListBox","ListItem","Text","BtnDelete","ContactList","useEffect","fetchContacts","length","map","id","onClick","deleteContact"],"sourceRoot":""}